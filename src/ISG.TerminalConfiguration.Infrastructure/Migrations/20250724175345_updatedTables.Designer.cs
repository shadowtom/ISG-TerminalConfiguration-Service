// <auto-generated />
using System;
using ISG.TerminalConfiguration.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISG.TerminalConfiguration.Infrastructure.Migrations
{
    [DbContext(typeof(ConfigurationsDbContext))]
    [Migration("20250724175345_updatedTables")]
    partial class updatedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISG.TerminalConfiguration.Infrastructure.DTO.KioskDTO", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClientID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("KioskSettings");
                });

            modelBuilder.Entity("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalConfigurationDTO", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("KioskID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("clientID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TerminalSettingsInfo");
                });

            modelBuilder.Entity("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalSecurityDTO", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("expirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("TerminalId")
                        .IsUnique();

                    b.ToTable("TerminalSecurity");
                });

            modelBuilder.Entity("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalSecurityDTO", b =>
                {
                    b.HasOne("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalConfigurationDTO", "Configuration")
                        .WithOne("Security")
                        .HasForeignKey("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalSecurityDTO", "TerminalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("ISG.TerminalConfiguration.Infrastructure.DTO.TerminalConfigurationDTO", b =>
                {
                    b.Navigation("Security")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
